---
import { isInputError } from "astro:actions";
import { server } from "@/actions";
import { actions } from "astro:actions";

// Obtenemos el resultado de la acción (por si hay errores o se envió bien)
const result = Astro.getActionResult(actions.send);
console.log("Result ==> ", result);

if (result && !result.error) {
  console.log("Todo ok!!");
}
const inputErrors = isInputError(result?.error) ? result.error.fields : {};
---

<section
  id="contacto"
  class="bg-surface-dark py-16 sm:py-24 dark:bg-surface-dark">
  <div class="container mx-auto px-4 sm:px-6 lg:px-8">
    <div class="grid gap-12 lg:grid-cols-2 items-center">
      <!-- Lado izquierdo -->
      <div>
        <h2 class="text-3xl font-extrabold text-white sm:text-4xl">
          Hablemos de tu seguridad digital
        </h2>
        <p class="mt-4 text-lg text-text-muted-dark max-w-lg">
          Analizamos tu situación sin compromiso y te proponemos un plan claro,
          accionable y medible.
        </p>

        <div class="mt-6 flex flex-col gap-3 text-text-muted-dark">
          <div class="flex items-center gap-3">
            <span class="material-symbols-rounded text-primary"
              >location_on</span
            >
            <span>Madrid, España</span>
          </div>
          <div class="flex items-center gap-3">
            <span class="material-symbols-rounded text-primary">mail</span>
            <span>info@nyxioncybersecurity.com</span>
          </div>
          <div class="flex items-center gap-3">
            <span class="material-symbols-rounded text-primary">call</span>
            <span>+34 900 123 456</span>
          </div>
          <div class="flex items-center gap-3">
            <span class="material-symbols-rounded text-accent">warning</span>
            <span>Emergencias: +34 900 654 321</span>
          </div>
        </div>
      </div>

      <!-- Formulario -->
      <form
        id="form"
        method="POST"
        class="space-y-4 rounded-xl bg-background-dark p-6 shadow-lg border border-border-dark">
        <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
          <div>
            <input
              type="text"
              name="name"
              placeholder="Nombre completo *"
              required
              aria-describedby={inputErrors.name ? "name-error" : undefined}
              class="w-full rounded-lg border border-border-dark bg-surface-dark px-4 py-3 text-white placeholder-gray-500 focus:border-primary focus:ring-1 focus:ring-primary"
            />
            {
              inputErrors.name && (
                <p id="name-error" class="text-accent text-sm mt-1">
                  {inputErrors.name[0]}
                </p>
              )
            }
          </div>

          <div>
            <input
              type="email"
              name="email"
              placeholder="Email corporativo *"
              required
              aria-describedby={inputErrors.email ? "email-error" : undefined}
              class="w-full rounded-lg border border-border-dark bg-surface-dark px-4 py-3 text-white placeholder-gray-500 focus:border-primary focus:ring-1 focus:ring-primary"
            />
            {
              inputErrors.email && (
                <p id="email-error" class="text-accent text-sm mt-1">
                  {inputErrors.email[0]}
                </p>
              )
            }
          </div>
        </div>

        <select
          name="service"
          class="w-full rounded-lg border border-border-dark bg-surface-dark px-4 py-3 text-white placeholder-gray-500 focus:border-primary focus:ring-1 focus:ring-primary">
          <option value="">Servicio de interés</option>
          <option value="preventiva">Ciberseguridad Preventiva</option>
          <option value="reactiva">Ciberseguridad Reactiva</option>
          <option value="avanzada">Ciberseguridad Avanzada</option>
          <option value="formacion">Formación y Concienciación</option>
          <option value="consulta">Consulta General</option>
        </select>

        <div>
          <textarea
            name="message"
            placeholder="Cuéntanos brevemente tu situación *"
            required
            aria-describedby={inputErrors.message ? "message-error" : undefined}
            rows="4"
            class="w-full rounded-lg border border-border-dark bg-surface-dark px-4 py-3 text-white placeholder-gray-500 focus:border-primary focus:ring-1 focus:ring-primary"
          ></textarea>
          {
            inputErrors.message && (
              <p id="message-error" class="text-accent text-sm mt-1">
                {inputErrors.message[0]}
              </p>
            )
          }
        </div>

        <button
          type="submit"
          class="w-full rounded-lg bg-primary px-6 py-3 font-semibold text-white transition hover:bg-secondary-blue">
          Enviar consulta
        </button>
      </form>
    </div>
  </div>
</section>
<!-- <script>
  document.querySelector("form").addEventListener("submit", (e) => e.preventDefault());
</script> -->
<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.querySelector("form");
    const button = form.querySelector("button[type='submit']");

    form.addEventListener("submit", async (e) => {
      e.preventDefault();
      button.disabled = true;
      button.textContent = "Enviando...";

      const data = new FormData(form);

      try {
        const response = await fetch(
          "/actions/server/send?__astro_action=json",
          {
            method: "POST",
            body: data,
          },
        );

        if (!response.ok) throw new Error("Error en la petición");

        const result = await response.json();
        console.log("Respuesta del servidor:", result);

        if (result?.success) {
          notify("✅ Tu consulta se ha enviado correctamente.", "success");
          form.reset();
        } else {
          notify("❌ Error al enviar la consulta.", "error");
        }
      } catch (err) {
        notify("⚠️ Error de conexión con el servidor.", "error");
        console.error(err);
      } finally {
        button.disabled = false;
        button.textContent = "Enviar consulta";
      }
    });

    function notify(message, type = "info") {
      const toast = document.createElement("div");
      toast.textContent = message;
      toast.className = `fixed bottom-6 right-6 px-4 py-3 rounded-lg shadow-lg text-white text-sm z-50 transition-opacity duration-300 opacity-0 ${
        type === "success"
          ? "bg-green-600"
          : type === "error"
            ? "bg-red-600"
            : "bg-blue-600"
      }`;
      document.body.appendChild(toast);
      setTimeout(() => (toast.style.opacity = "1"), 50);
      setTimeout(() => {
        toast.style.opacity = "0";
        setTimeout(() => toast.remove(), 300);
      }, 3500);
    }
  });
</script>
