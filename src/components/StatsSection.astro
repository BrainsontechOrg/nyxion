<section
  class="py-16 sm:py-24 bg-section-dark"
  id="resultados"
  aria-labelledby="resultados-title">
  <div class="container mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center">
      <h2
        class="text-3xl font-extrabold text-white sm:text-4xl"
        id="resultados-title">
        Resultados que Hablan por Sí Mismos
      </h2>
      <p class="mt-4 text-lg text-text-muted-dark max-w-2xl mx-auto">
        Nuestra experiencia y compromiso con la excelencia se reflejan en cada
        cifra.
      </p>
    </div>

    <div class="mt-12 grid grid-cols-1 gap-8 sm:grid-cols-2 lg:grid-cols-3">
      <div
        class="rounded-lg border border-border-dark bg-surface-dark p-8 text-center shadow-md transition-transform duration-300 hover:scale-105">
        <p
          class="text-5xl font-extrabold text-primary"
          data-count="95"
          data-suffix="%">
          0%
        </p>
        <p class="mt-3 text-lg font-medium text-white">Clientes Satisfechos</p>
      </div>

      <div
        class="rounded-lg border border-border-dark bg-surface-dark p-8 text-center shadow-md transition-transform duration-300 hover:scale-105">
        <p
          class="text-5xl font-extrabold text-primary"
          data-count="10"
          data-suffix="+">
          0+
        </p>
        <p class="mt-3 text-lg font-medium text-white">Años de Experiencia</p>
      </div>

      <div
        class="rounded-lg border border-border-dark bg-surface-dark p-8 text-center shadow-md transition-transform duration-300 hover:scale-105">
        <p
          class="text-5xl font-extrabold text-primary"
          data-count="500"
          data-suffix="+">
          0+
        </p>
        <p class="mt-3 text-lg font-medium text-white">Incidentes Resueltos</p>
      </div>
    </div>
  </div>
</section>

<script client:load>
  (() => {
    // IIFE para aislar el código y evitar conflictos con otras secciones
    const counters = document.querySelectorAll("[data-count]");

    const animateCount = (el) => {
      const target = +el.dataset.count;
      const suffix = el.dataset.suffix || "";
      const duration = 1200; // 1.2s
      const start = performance.now();

      const update = (time) => {
        const progress = Math.min((time - start) / duration, 1);
        el.textContent = Math.floor(progress * target) + suffix;
        if (progress < 1) requestAnimationFrame(update);
      };

      requestAnimationFrame(update);
    };

    // nombre único de variable para evitar conflictos
    const observerResultados = new IntersectionObserver(
      (entries, obs) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            animateCount(entry.target);
            obs.unobserve(entry.target);
          }
        });
      },
      { threshold: 0.5 },
    );

    counters.forEach((el) => observerResultados.observe(el));
  })();
</script>
